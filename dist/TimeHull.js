"use strict";function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t)){for(var e=0,i=new Array(t.length);e<t.length;e++)i[e]=t[e];return i}}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var i=0;i<e.length;i++){var n=e[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,i){return e&&_defineProperties(t.prototype,e),i&&_defineProperties(t,i),t}var areaPolygon=require("area-polygon"),hull=require("hull.js"),getDistinctPoints=require("./getDistinctPoints"),TimeHull=function(){function h(t){var e=this;_classCallCheck(this,h);var i=t||{},n=i.seriesPoints,r=i.width,s=i.height,o=i.startIndex,a=i.endIndex;if(void 0===n||!n.length)throw new Error("noSeriesPoints");this.seriesPoints=function(){return n},this.width=r||0,this.height=s||0,this.startIndex=o||0,this.endIndex=a||n.length-1,this.points=this.getSlicedPoints(),this.name=this.endTime(),this.duration=function(){return n[e.endIndex+1]?n[e.endIndex+1].timestamp-e.endTime():0}}return _createClass(h,[{key:"getArea",value:function(t){var e=(t||{}).points;if(void 0===this.area||e){e=e||this.points;var i=getDistinctPoints(this.getPolygon({points:e}));if(i.length<3)return 0;this.area=areaPolygon(i)}return this.area}},{key:"azimuth",value:function(){var t;if(this.points&&1<this.points.length){var e=this.points[this.points.length-2],i=this.points[this.points.length-1];e.x===i.x&&e.y===i.y?t=0:(t=90-180*Math.atan2(i.y-e.y,i.x-e.x)/Math.PI,t<0&&(t+=360))}return t}},{key:"calculateCentroid",value:function(t){var e=getDistinctPoints(this.getPolygon({points:_toConsumableArray(t)}));if(1===e.length)return{x:e[0].x,y:e[0].y};if(2===e.length)return{x:(e[0].x+e[1].x)/2,y:(e[0].y+e[1].y)/2};e.push(e[0]);for(var i,n,r,s=0,o=0,a=0,h=e.length,u=0,l=h-1;u<h;u+=1)i=e[u],n=e[l],s+=r=i.x*n.y-n.x*i.y,o+=(i.x+n.x)*r,a+=(i.y+n.y)*r,l=u;return{x:o/(r=3*s),y:a/r}}},{key:"getCentroid",value:function(t){var e=(t||{}).which;return void 0===this.centroid&&(this.centroid=this.calculateCentroid(this.points)),void 0!==e&&void 0!==this.centroid?this.centroid[e]:this.centroid}},{key:"getCoverage",value:function(t){var e=(t||{}).points;if(void 0===this.coverage||e){e=e||this.points;var i=t&&t.width||this.width,n=t&&t.height||this.height,r=this.getArea({points:e});if(0===r)this.coverage=0;else{if(i*n==0)throw new Error("noStimulusArea");this.coverage=r/(i*n)}}return this.coverage}},{key:"coverageDuration",value:function(t){return this.getCoverage(t)*this.duration()}},{key:"coveragePercent",value:function(t){var e=t&&t.points||this.points;return 100*this.getCoverage({points:e})}},{key:"distance",value:function(t){return void 0!==t?this.points&&1<this.points.length?this.points[this.points.length-1][t]-this.points[this.points.length-2][t]:0:Math.sqrt(this.distance("x")*this.distance("x")+this.distance("y")*this.distance("y"))}},{key:"elapsedTime",value:function(){return this.endTime()-this.seriesPoints()[0].timestamp}},{key:"endTime",value:function(){return this.points[this.points.length-1].timestamp}},{key:"getPoints",value:function(e){return void 0!==e?this.points.map(function(t){return t[e]}):this.points}},{key:"getSlicedPoints",value:function(e){var t=this.seriesPoints().slice(this.startIndex,this.endIndex+1);return void 0!==e?t.map(function(t){return t[e]}):t}},{key:"lastPoint",value:function(){return this.points[this.points.length-1]}},{key:"period",value:function(){return this.endTime()-this.startTime()}},{key:"getPolygon",value:function(t){var e=t&&t.points||this.points,i=(t||{}).which,n=hull(h.XYToCoordinates(e),1/0);return n=h.coordinatesToXY(n),void 0!==i?n.map(function(t){return t[i]}):n}},{key:"startTime",value:function(){return this.points[0].timestamp}},{key:"timestep",value:function(){return this.points&&1<this.points.length?this.points[this.points.length-1].timestamp-this.points[this.points.length-2].timestamp:0}},{key:"velocity",value:function(t){return 0<this.timestep()&&0<this.distance()?this.distance(t)/this.timestep():0}}],[{key:"coordinatesToXY",value:function(t){return t.map(function(t){return{x:t[0],y:t[1]}})}},{key:"XYToCoordinates",value:function(t){return t.map(function(t){return[t.x,t.y]})}}]),h}();module.exports=TimeHull;